#!/usr/bin/env bash
# compile <build-dir> <cache-dir> <env-dir>

set -e

BUILDPACK_BINDIR=`dirname $0` 
BUILDPACK_DIR=`dirname $BUILDPACK_BINDIR`
APP_DIR=$1
APP_CACHEDIR=$2
APP_ENVDIR=$3 

# make sure the cache directory is there 
mkdir -p $APP_CACHEDIR 

# do we need to build nginx? 
if [ ! -x $APP_CACHEDIR/sbin/nginx ] 
then
   echo "-----> tf-nginx-buildpack: No cached nginx binary, building."
   rm -rf $APP_CACHEDIR/build
   mkdir -p $APP_CACHEDIR/build
   $BUILDPACK_DIR/scripts/build_nginx.sh $APP_CACHEDIR
fi  

# if there's no binary now, we're cooked 
if [ ! -x $APP_CACHEDIR/sbin/nginx ] 
then
   echo "-----> tf-nginx-buildpack: nginx build failed"
   exit 1
fi  

# otherwise, should be good to install  
mkdir -p "$APP_DIR/bin/"
cp "$APP_CACHEDIR/sbin/nginx" "$APP_DIR/bin/nginx"
nginx_version=$("$APP_DIR/bin/nginx" -V 2>&1 | head -1 | awk '{ print $NF }')

echo "-----> tf-nginx-buildpack: Installed ${nginx_version} to app/bin"

cp "$BUILDPACK_BINDIR/start-nginx" "$APP_DIR/bin/"

echo '-----> tf-nginx-buildpack: Added start-nginx to app/bin'

mkdir -p "$APP_DIR/config"
mkdir -p "$APP_DIR/logs"

cp "$BUILDPACK_DIR/config/mime.types" "$APP_DIR/config/"

echo '-----> tf-nginx-buildpack: Default mime.types copied to app/config/'

if [[ ! -f $1/config/nginx.conf.erb ]]; then
	cp $BUILDPACK_DIR/config/nginx.conf.erb "$1/config/"
	echo '-----> tf-nginx-buildpack: Default config copied to app/config.'
else
	echo '-----> tf-nginx-buildpack: Custom config found in app/config.'
fi
echo "Installing gem: smarter_csv"
gem install smarter_csv

exit 0
